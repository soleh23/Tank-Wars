
import java.io.File;

import javax.swing.*;
import sun.audio.*;
import java.io.*;
import java.awt.*;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author shahrzad
 */
public class StartMenu extends javax.swing.JFrame {

    /**
     * Creates new form StartMenu
     */
    public StartMenu() {
        initComponents();

//        gamePlayController = new GamePlayController();
        
        this.selected = false;
        //musicSel.setSelected(selected);
        try{
            music = new FileInputStream(new File("the_kraken_hans_zimmer_www_dilandau_eu.wav"));
            audios = new AudioStream(music);
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(null,e.getLocalizedMessage());
        }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        musicSel = new javax.swing.JRadioButton();
        start = new javax.swing.JButton();
        soundSel = new javax.swing.JRadioButton();
        setting = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setResizable(false);
        setLocation(350,140);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(701, 496));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        musicSel.setBackground(new java.awt.Color(204, 204, 204));
        musicSel.setFont(new java.awt.Font("Kristen ITC", 1, 21)); // NOI18N
        musicSel.setText(" MUSIC");
        musicSel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                musicSelStateChanged(evt);
            }
        });
        musicSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musicSelActionPerformed(evt);
            }
        });
        getContentPane().add(musicSel);
        musicSel.setBounds(280, 160, 137, 39);

        start.setFont(new java.awt.Font("Kristen ITC", 1, 21)); // NOI18N
        start.setText("START");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        getContentPane().add(start);
        start.setBounds(297, 72, 150, 70);

        soundSel.setBackground(new java.awt.Color(204, 204, 204));
        soundSel.setFont(new java.awt.Font("Kristen ITC", 1, 21)); // NOI18N
        soundSel.setText(" SOUNDS");
        getContentPane().add(soundSel);
        soundSel.setBounds(280, 210, 137, 39);
        soundSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundSelActionPerformed(evt);
            }
        });

        setting.setFont(new java.awt.Font("Kristen ITC", 1, 21)); // NOI18N
        setting.setText("SETTING");
        setting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingActionPerformed(evt);
            }
        });
        getContentPane().add(setting);
        setting.setBounds(300, 190, 150, 70);

        exit.setFont(new java.awt.Font("Kristen ITC", 1, 21)); // NOI18N
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(297, 330, 150, 70);

        back.setFont(new java.awt.Font("Kristen ITC", 1, 21)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(30, 360, 120, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("screenshot-armored-aces-app-game-home.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 700, 490);

        pack();
    }// </editor-fold>    
    
    private void musicSelStateChanged(javax.swing.event.ChangeEvent evt) {                                      

    }                                     

    //choosing music
    private void soundSelActionPerformed(java.awt.event.ActionEvent evt) {                                         
        AbstractButton abstractButton = (AbstractButton) evt.getSource();
        soundSelected = abstractButton.getModel().isSelected();
        
    }    
    
    //choosing sound
    private void musicSelActionPerformed(java.awt.event.ActionEvent evt) {                                         
        AbstractButton abstractButton = (AbstractButton) evt.getSource();
        selected = abstractButton.getModel().isSelected();

        if(selected){
            AudioPlayer.player.stop(audios);
        }
        else{
            AudioPlayer.player.start(audios);
        }

    } 

    private void startActionPerformed(java.awt.event.ActionEvent evt) {  
    	int DIMENSION_X = 1000, DIMENSION_Y = 768;
    	AudioPlayer.player.stop(audios);
    			
    	gamePlayController = new GamePlayController();
    	Frame a = new Frame();
    	GamePlay gamePlay = gamePlayController.getGamePlay();
		gamePlay.setSelected(selected);
		gamePlay.setSound(soundSelected);
		
		gamePlay.setVisible(true);
		gamePlay.setFocusable(true);
		a.add(gamePlay);
		a.setResizable(false);
		a.setVisible(true);
		//
		if(!selected)
			gamePlay.startMusic();
		
		a.setSize(new Dimension(DIMENSION_X, DIMENSION_Y));
		a.setLocation(200, 0);
		this.dispose();
		

		a.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				gamePlay.stopMusic();
				
				StartMenu s = new StartMenu();
				s.setSelected(gamePlay.getSelected());
				s.setSound(gamePlay.getSound());
				a.dispose();				
				s.setVisible(true);
			}
		});
    }                                     

    private void settingActionPerformed(java.awt.event.ActionEvent evt) {                                        
        musicSel.setVisible(true);
        soundSel.setVisible(true);
        back.setVisible(true);

        start.setVisible(false);
        setting.setVisible(false);
        exit.setVisible(false);
    }                                       

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        System.exit(0);
    }                                    

    private void backActionPerformed(java.awt.event.ActionEvent evt) {                                     
        musicSel.setVisible(false);
        soundSel.setVisible(false);
        back.setVisible(false);

        start.setVisible(true);
        setting.setVisible(true);
        exit.setVisible(true);
    }                                    

    private void formWindowOpened(java.awt.event.WindowEvent evt) { 
    	if(!selected)
    		AudioPlayer.player.start(audios);
        
        soundSel.setVisible(false);
        musicSel.setVisible(false);
        back.setVisible(false);
    }                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartMenu().setVisible(true);
            }
        });
    }
    
    public void setSelected(boolean selected){
    	this.selected = selected;
    	musicSel.setSelected(selected);
    }
    
    public void setSound(boolean soundSelected){
    	this.soundSelected = soundSelected;
    	this.soundSel.setSelected(soundSelected);
    }

    private boolean selected;
    private InputStream music;
    private AudioStream audios;
    private boolean soundSelected;
    
    private static final long serialVersionUID = 1L;
    private static GamePlayController gamePlayController;
    // Variables declaration - do not modify                     
    private javax.swing.JButton back;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton musicSel;
    private javax.swing.JButton setting;
    private javax.swing.JRadioButton soundSel;
    private javax.swing.JButton start;
    // End of variables declaration                   
}
